#:kivy 1.8.0
#:import SlideTransition kivy.uix.screenmanager.SlideTransition 
#:set COLOR_HIGHLIGHT (0.788235294, 0.643137255, 1)
#:set COLOR_BACKGROUND (0.349019608, 0.082352941, 0.658823529)
#:set COLOR_BACKGROUND_A50 (0.349019608, 0.082352941, 0.658823529, .5)
#:set COLOR_BORDER (0.643137255, 0.160784314, 1)
#:set COLOR_BORDER_A50 (0.643137255, 0.160784314, 1, .5)
#:set COLOR_BORDER_A75 (0.643137255, 0.160784314, 1, .75)
#:set COLOR_HIGHLIGHT_A50 (0.788235294, 0.643137255, 1, .5)
#:set COLOR_HIGHLIGHT_A100 (0.788235294, 0.643137255, 1, 1.0)
#:set COLOR_BACKGROUND_A100 (0.349019608, 0.082352941, 0.658823529, 1.0)
#:set COLOR_BORDER_A100 (0.643137255, 0.160784314, 1, 1.0)

TestGame:

<TestGame>:
    gameworld: gameworld
    GameWorld:
        id: gameworld
        gamescreenmanager: gamescreenmanager
        PositionSystem:
            system_id: 'position'
            gameworld: gameworld
        RotateSystem:
            system_id: 'rotate'
            gameworld: gameworld
        GameView:
            system_id: 'gameview'
            focus_entity: False
            updateable: True
            gameworld: gameworld
            pos: root.pos
            do_scroll: True
            do_scroll_lock: False
            size: root.size
        GameMap:
            system_id: 'map'
            map_size: root.size
            gameworld: gameworld
        Renderer:
            gameworld: gameworld
            system_id: 'renderer'
            shader_source: 'assets/glsl/positionshader.glsl'
            atlas_dir: 'assets/'
            atlas: 'myatlas'
        DynamicRenderer:
            gameworld: gameworld
            system_id: 'physics_renderer'
            shader_source: 'assets/glsl/positionrotateshader.glsl'
            atlas_dir: 'assets/'
            atlas: 'myatlas'
            physics_system: 'physics'
        CymunkPhysics:
            gameworld: root.gameworld
            system_id: 'physics'
            viewport: 'gameview'
    GameScreenManager:
        id: gamescreenmanager
        size: root.size
        pos: root.pos
        gameworld: gameworld

<GameScreenManager>:
    MainScreen:
        id: main_screen

<tbox@TextInput>
    multiline: False
<CircleSettings@BoxLayout>
    radiusLabel:radiusLabel
    BoxLayout:
        Label:
            text: "radius:"
        TextInput:
            id: radiusLabel
            multiline: False
            text: "radius"
<BoxSettings@BoxLayout>
    orientation: 'vertical'
    widthLabel:widthLabel
    heightLabel:heightLabel
    BoxLayout:
        Label:
            text: "width:"
        TextInput:
            id: widthLabel
            multiline: False
            text: "width"
    BoxLayout:
        Label:
            text: "height:"
        TextInput:
            id: heightLabel
            multiline: False
            text: "height"

<MainTools@FloatLayout>
    leftMenu: leftMenu
    rightMenu: rightMenu
    createMenu: createMenu.__self__
    rootMenu: rootMenu
    joinMenu: joinMenu.__self__
    entityMenu: entityMenu.__self__
    massSlider: massSlider
    spriteSpinner: spriteSpinner
    selectedMenu: selectedMenu.__self__
    
    BoxLayout:
        id: rightMenu
        size_hint: (.15, 1)
        orientation: 'horizontal'
        pos_hint: {'x':.85, 'y':0}
        BoxLayout:
            id: selectedMenu
            selectedLabel: selectedLabel
            xposLabel: xposLabel
            yposLabel: yposLabel
            angleLabel: angleLabel
            shapeInfo: shapeInfo
            frictionLabel: frictionLabel
            massLabel: massLabel
            elasLabel: elasLabel
            texLabel: texLabel
            delButton: delButton
            orientation: 'vertical'
            Label:
                id: selectedLabel
                text: "selected item"
            BoxLayout:
                Label:
                    text: "x:"
                tbox:
                    id: xposLabel
                    text: "position"
                    on_text: root.xposChanged(self)
            BoxLayout:
                Label:
                    text: "y:"
                tbox:
                    id: yposLabel
                    text: "position"
                    on_text: root.yposChanged(self)
            BoxLayout:
                Label:
                    text: "angle:"
                tbox:
                    id: angleLabel
                    text: "angle"
                    on_text: root.angleChanged(self)
            #Label:
            #    id: texLabel
            #    text: "texture"
            Spinner:
                id: texLabel
                text: "texture"
                on_text: root.textureChanged(self)
            BoxLayout:
                Label:
                    text: "Mass:"
                tbox:
                    id: massLabel
                    text: "Mass"
                    on_text: root.massChanged(self)
            BoxLayout:
                Label:
                    text: "Friction:"
                tbox:
                    id: frictionLabel
                    text: "Friction"
                    on_text: root.frictionChanged(self)
            BoxLayout:
                Label:
                    text: "Elasticity:"
                tbox:
                    id: elasLabel
                    text: "Elasticity"
                    on_text: root.elasChanged(self)
            BoxLayout:
                id: shapeInfo
                orientation: 'vertical'
            Button:
                id: delButton
                text: 'delete'
                on_press: root.delSelPressed(self)
        
    BoxLayout:
        id: leftMenu
        size_hint: (.15, 1)
        orientation: 'horizontal'
        BoxLayout:
            id: rootMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            Button:
                id: camButton
                text: 'Camera'
                on_press: root.camPressed(self)
            Button:
                id: createButton
                text: 'Create'
                on_press: root.createPressed(self)
            Button:
                id: createButton
                text: 'Entity'
                on_press: root.entityPressed(self)
            Button:
                id: joinButton
                text: 'Join'
                on_press: root.joinPressed(self)
            Button:
                id: playButton
                text: 'pause/play'
                on_press: root.playPressed(self)
            Button:
                id: vortexButton
                text: 'Vortex'
                on_press: root.vortexPressed(self)
            Button:
                id: dragButton
                text: 'Drag'
                on_press: root.dragPressed(self)
            Button:
                id: deleteButton
                text: 'Delete'
                on_press: root.delPressed(self)
            Button:
                text: 'Save'
                on_press: root.savePressed(self)
            Button:
                text: 'Load'
                on_press: root.loadPressed(self)
            Button:
                text: 'Clear'
                on_press: root.clearPressed(self)
        BoxLayout:
            id: entityMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            Button:
                id: startButton
                text: 'Start'
                on_press: root.startPressed(self)
            Button:
                id: endButton
                text: 'End'
                on_press: root.endPressed(self)
            Button:
                id: blankButton
                text: 'Blank'
                on_press: root.blankPressed(self)
        BoxLayout:
            id: createMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            Button:
                id: circleButton
                text: 'Circles'
                on_press: root.circlePressed(self)
            Button:
                id: squareButton
                text: 'Square'
                on_press: root.squarePressed(self)
            Button:
                id: boxButton
                text: 'Box'
                on_press: root.boxPressed(self)
            Button:
                id: linesButton
                text: 'Lines'
                on_press: root.drawPressed(self)
            Button:
                id: plankButton
                text: 'Plank'
                on_press: root.plankPressed(self)
            Label:
                size_hint: (1,0.2)
                text: "Settings"
            Label:
                size_hint: (1,0.2)
                text: "  Image:"
            Spinner:
                id: spriteSpinner
            BoxLayout:
                orientation: 'horizontal'
                Button:
                    text: "Mass"
                    on_press: root.massPressed(self)
                Slider:
                    id: massSlider
                    orientation: "vertical"
                    min:0
                    max:100
                    value:10
        
        BoxLayout:
            id: joinMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            Button:
                text: 'Pin to World'
                on_press: root.joinPinPressed(self)
            Button:
                text: 'Point 2 Point'
                on_press: root.joinP2PPressed(self)
            Button:
                text: 'P2P Spring'
                on_press: root.joinP2PSPressed(self)
            Button:
                text: 'Center 2 Point'
                on_press: root.joinC2PPressed(self)
            Button:
                text: 'Center 2 Center'
                on_press: root.joinC2CPressed(self)
        
<PlainButton@Button>:
    
                
<MainScreen@GameScreen>:
    name: 'main'
    FloatLayout:
        size: root.size
        pos: root.pos
        MainTools:
            id: mainTools

