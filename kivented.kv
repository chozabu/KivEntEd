#:kivy 1.8.0
#:import SlideTransition kivy.uix.screenmanager.SlideTransition 
#:set COLOR_HIGHLIGHT (0.788235294, 0.643137255, 1)
#:set COLOR_BACKGROUND (0.349019608, 0.082352941, 0.658823529)
#:set COLOR_BACKGROUND_A50 (0.349019608, 0.082352941, 0.658823529, .5)
#:set COLOR_BORDER (0.643137255, 0.160784314, 1)
#:set COLOR_BORDER_A50 (0.643137255, 0.160784314, 1, .5)
#:set COLOR_BORDER_A75 (0.643137255, 0.160784314, 1, .75)
#:set COLOR_HIGHLIGHT_A50 (0.788235294, 0.643137255, 1, .5)
#:set COLOR_HIGHLIGHT_A100 (0.788235294, 0.643137255, 1, 1.0)
#:set COLOR_BACKGROUND_A100 (0.349019608, 0.082352941, 0.658823529, 1.0)
#:set COLOR_BORDER_A100 (0.643137255, 0.160784314, 1, 1.0)

TestGame:

<TestGame>:
    gameworld: gameworld
    GameWorld:
        id: gameworld
        gamescreenmanager: gamescreenmanager
        PositionSystem:
            system_id: 'position'
            gameworld: gameworld
        RotateSystem:
            system_id: 'rotate'
            gameworld: gameworld
        GameView:
            system_id: 'gameview'
            focus_entity: False
            updateable: True
            gameworld: gameworld
            pos: root.pos
            do_scroll: True
            do_scroll_lock: False
            size: root.size
        GameMap:
            system_id: 'map'
            map_size: root.size
            gameworld: gameworld
        Renderer:
            gameworld: gameworld
            system_id: 'renderer'
            do_rotate: True
            shader_source: 'assets/glsl/positionrotateshader.glsl'
            atlas_dir: 'assets/'
            atlas: 'myatlas'
        DynamicRenderer:
            gameworld: gameworld
            system_id: 'physics_renderer'
            shader_source: 'assets/glsl/positionrotateshader.glsl'
            atlas_dir: 'assets/'
            atlas: 'myatlas'
            physics_system: 'physics'
        CymunkPhysics:
            gameworld: root.gameworld
            system_id: 'physics'
            viewport: 'gameview'
    GameScreenManager:
        id: gamescreenmanager
        size: root.size
        pos: root.pos
        gameworld: gameworld

<GameScreenManager>:
    MainScreen:
        id: main_screen

<tbox@TextInput>
    multiline: False
<CircleSettings@BoxLayout>
    radiusLabel:radiusLabel
    size_hint_y:None
    height:30
    BoxLayout:
        Label:
            text: "radius:"
        TextInput:
            id: radiusLabel
            multiline: False
            text: "radius"
<BoxSettings@BoxLayout>
    orientation: 'vertical'
    widthLabel:widthLabel
    heightLabel:heightLabel
    spacing: 4
    #size_hint_y:None
    #height:60
    #rows_minimum:60
    BoxLayout:
        Label:
            text: "width:"
        TextInput:
            id: widthLabel
            multiline: False
            text: "width"
    BoxLayout:
        Label:
            text: "height:"
        TextInput:
            id: heightLabel
            multiline: False
            text: "height"

<MainTools@FloatLayout>
    leftMenu: leftMenu
    rightMenu: rightMenu
    createMenu: createMenu.__self__
    rootMenu: rootMenu
    joinMenu: joinMenu.__self__
    entityMenu: entityMenu.__self__
    massSlider: massSlider
    gravxSlider: gravxSlider
    gravySlider: gravySlider
    spriteSpinner: spriteSpinner
    selectedMenu: selectedMenu
    selectedMenuView: selectedMenuView.__self__
    fileMenu: fileMenu.__self__
    
    BoxLayout:
        id: rightMenu
        size_hint: (.15, 1)
        orientation: 'horizontal'
        pos_hint: {'x':.85, 'y':0}
        ScrollView:
            id: selectedMenuView
            GridLayout:
                cols: 1
                spacing: 4
                size_hint_y: None
                row_default_height: 30
                row_force_default: False
                id: selectedMenu
                selectedLabel: selectedLabel
                xposLabel: xposLabel
                yposLabel: yposLabel
                angleLabel: angleLabel
                shapeInfo: shapeInfo
                height: self.minimum_height
                frictionLabel: frictionLabel
                massLabel: massLabel
                elasLabel: elasLabel
                texLabel: texLabel
                colTypeSpinner: colTypeSpinner
                delButton: delButton
                Label:
                    id: selectedLabel
                    text: "selected item"
                BoxLayout:
                    #height:100
                    Label:
                        text: "x:"
                    tbox:
                        id: xposLabel
                        text: "position"
                        on_text: root.xposChanged(self)
                BoxLayout:
                    Label:
                        text: "y:"
                    tbox:
                        id: yposLabel
                        text: "position"
                        on_text: root.yposChanged(self)
                BoxLayout:
                    Label:
                        text: "angle:"
                    tbox:
                        id: angleLabel
                        text: "angle"
                        on_text: root.angleChanged(self)
                Spinner:
                    id: texLabel
                    text: "texture"
                    on_text: root.textureChanged(self)
                BoxLayout:
                    Label:
                        text: "Mass:"
                    tbox:
                        id: massLabel
                        text: "Mass"
                        on_text: root.massChanged(self)
                BoxLayout:
                    Label:
                        text: "Friction:"
                    tbox:
                        id: frictionLabel
                        text: "Friction"
                        on_text: root.frictionChanged(self)
                BoxLayout:
                    Label:
                        text: "Elasticity:"
                    tbox:
                        id: elasLabel
                        text: "Elasticity"
                        on_text: root.elasChanged(self)
                #ToggleButton:
                #    id: sensorButton
                #    text:"Sensor"
                #    on_press: root.sensorPressed(self)
                Spinner:
                    id: colTypeSpinner
                    text: "default"
                    on_text: root.colTypeChanged(self)
                    values: ["default", "vortex"]
                BoxLayout:
                    id: shapeInfo
                    size_hint_y:None
                    height:60
                    orientation: 'vertical'
                Button:
                    id: delButton
                    text: 'delete'
                    on_press: root.delSelPressed(self)
        
    BoxLayout:
        id: leftMenu
        size_hint: (.15, 1)
        orientation: 'horizontal'
        BoxLayout:
            id: rootMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            Button:
                text: 'File'
                on_press: root.changel2menu(root.fileMenu)
            ToggleButton:
                group: 'ToolGroup'
                id: camButton
                text: 'Camera'
                on_press: root.setTool("camera")
            Button:
                text: 'Create'
                on_press: root.changel2menu(root.createMenu)
            Button:
                text: 'Entity'
                on_press: root.changel2menu(root.entityMenu)
            Button:
                id: joinButton
                text: 'Join'
                on_press: root.changel2menu(root.joinMenu)
            Button:
                id: playButton
                text: 'pause/play'
                on_press: root.playPressed(self)
            ToggleButton:
                group: 'ToolGroup'
                id: vortexButton
                text: 'Vortex'
                on_press: root.setTool("vortex")
            ToggleButton:
                group: 'ToolGroup'
                id: dragButton
                text: 'Drag'
                on_press: root.setTool("drag")
            ToggleButton:
                group: 'ToolGroup'
                id: deleteButton
                text: 'Delete'
                on_press: root.setTool("del")
        BoxLayout:
            id: entityMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            ToggleButton:
                group: 'ToolGroup'
                id: startButton
                text: 'Start'
                on_press: root.setTool("start")
            ToggleButton:
                group: 'ToolGroup'
                id: endButton
                text: 'End'
                on_press: root.setTool("end")
            ToggleButton:
                group: 'ToolGroup'
                id: blankButton
                text: 'Blank'
                on_press: root.setTool("blank")
        BoxLayout:
            id: createMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            ToggleButton:
                group: 'ToolGroup'
                id: circleButton
                text: 'Circles'
                on_press: root.setTool("circle")
            ToggleButton:
                group: 'ToolGroup'
                id: squareButton
                text: 'Square'
                on_press: root.setTool("square")
            ToggleButton:
                group: 'ToolGroup'
                id: boxButton
                text: 'Box'
                on_press: root.setTool("box")
            ToggleButton:
                group: 'ToolGroup'
                id: linesButton
                text: 'Lines'
                on_press: root.setTool("draw")
            ToggleButton:
                group: 'ToolGroup'
                id: plankButton
                text: 'Plank'
                on_press: root.setTool("plank")
            Label:
                size_hint: (1,0.2)
                text: "Settings"
            Label:
                size_hint: (1,0.2)
                text: "  Image:"
            Spinner:
                id: spriteSpinner
            BoxLayout:
                orientation: 'horizontal'
                Button:
                    text: "Mass"
                    on_press: root.massPressed(self)
                Slider:
                    id: massSlider
                    orientation: "vertical"
                    min:0
                    max:100
                    value:10
        
        BoxLayout:
            id: joinMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            ToggleButton:
                group: 'ToolGroup'
                text: 'Pin to World'
                on_press: root.setTool("pin")
            ToggleButton:
                group: 'ToolGroup'
                text: 'Point 2 Point'
                on_press: root.setTool("p2p")
            ToggleButton:
                group: 'ToolGroup'
                text: 'P2P Spring'
                on_press: root.setTool("p2ps")
            ToggleButton:
                group: 'ToolGroup'
                text: 'Center 2 Point'
                on_press: root.setTool("c2p")
            ToggleButton:
                group: 'ToolGroup'
                text: 'Center 2 Center'
                on_press: root.setTool("c2c")

        BoxLayout:
            id: fileMenu
            orientation: 'vertical'
            pos_hint: {'x': 0., 'y': 1.0 - self.size_hint[1]}
            padding: 4
            height: root.height
            Button:
                text: 'Save'
                on_press: root.savePressed(self)
            Button:
                text: 'Load'
                on_press: root.loadPressed(self)
            Button:
                text: 'Clear'
                on_press: root.clearPressed(self)
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: "Gravity"
                    size_hint: (1, .2)
                Slider:
                    id: gravySlider
                    orientation: "vertical"
                    min:-1000
                    max:1000
                    value:0
                    on_value: root.setygrav(self.value)
                Slider:
                    id: gravxSlider
                    size_hint: (1, .2)
                    orientation: "horizontal"
                    min:-1000
                    max:1000
                    value:0
                    on_value: root.setxgrav(self.value)
        
<PlainButton@Button>:
    
                
<MainScreen@GameScreen>:
    name: 'main'
    FloatLayout:
        size: root.size
        pos: root.pos
        MainTools:
            id: mainTools

